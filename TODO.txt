Pri 0
- too memory inefficient with all these type IDs
	a) make ID smaller and have longer payload header ID
	b) make Ids be debug only

- implement in-out and out-in models for the client
- remove all deserialize methods and add ctors that take BinaryData. But what about multi-buffer?
- make header structured (len, version, etc.)
- make sure multi-buffer server code works
- implement client/server performance test
- cleanup models based on client/server sample
- object array
- alow for composing objects, i.e. object inline in anothere object
- allow arrays be inline in objects
- finish support for child types
- support dictionaries

Pri 1
- can model variants be consolidated/simplified?
- finish generator
- support generating client + server
- support other languages

Pri 2
- support for converting from JSON
- support for buffers (Span<byte>)
- support System.IO.Pipelines
- support multi-segment heap
- support null references
- polymorphism?
- add PoleWriter (forward only writer for trees) - what to do with strings. i.e. how to write both object and string?
- add PoleReader (forward only reader)
- add editor browsable